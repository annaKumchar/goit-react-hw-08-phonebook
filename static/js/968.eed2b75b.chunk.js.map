{"version":3,"file":"static/js/968.eed2b75b.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/List/List.styled.jsx","redux/selector.js","components/List/List.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormEl = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  font-weight: 500;\n  text-transform: uppercase;\n`;\n\nexport const InputEl = styled.input``;\n\nexport const ButtonEl = styled.button`\n  width: 100px;\n  padding: 10px;\n  background-color: rgb(255, 219, 99);\n  border: none;\n  border-radius: 8px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormEl, FormLabel, InputEl, ButtonEl } from './Form.styled';\nimport { nanoid } from 'nanoid';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/operations';\n\nexport function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(state => state.contacts.contacts);\n  const dispatch = useDispatch();\n\n  let NameId = nanoid();\n  let NumberId = nanoid();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const addContactToList = (name, number) => {\n    if (contactIsNotInList(name)) {\n      const action = addContact({ id: nanoid(), name, number });\n      // const action = addContact({ id: nanoid(), name, phone: number });\n      dispatch(action);\n      reset();\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addContactToList(name, number);\n  };\n\n  const contactIsNotInList = name => {\n    if (contacts.some(e => e.name === name)) {\n      alert(`${name} is already in contacts!`);\n      return false;\n    }\n    return true;\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormEl onSubmit={handleSubmit}>\n      <FormLabel htmlFor={NameId}>\n        Name\n        <InputEl\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        ></InputEl>\n      </FormLabel>\n\n      <FormLabel htmlFor={NumberId}>\n        Number\n        <InputEl\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        ></InputEl>\n      </FormLabel>\n      <ButtonEl>Add contact</ButtonEl>\n    </FormEl>\n  );\n}\n\nForm.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  handleChange: PropTypes.func,\n  handleSubmit: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const PhonebookWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 50px;\n`;\n\nexport const PhonebookSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: white;\n  width: 500px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  padding: 10px;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 0;\n  text-transform: uppercase;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PhonebookSection, Title } from '../Section/Section.styled';\n\nexport const Section = ({ title, children }) => (\n  <PhonebookSection>\n    <Title>{title}</Title>\n    {children}\n  </PhonebookSection>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const ListEl = styled.ul`\n  list-style: none;\n  padding: 0px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 30px;\n`;\n\nexport const ListItem = styled.li`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  border: 2px solid grey;\n`;\n\nexport const ListButton = styled.button`\n  margin-top: 10px;\n  width: 60px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVizibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n  }\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListEl, ListItem, ListButton } from './List.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { selectVizibleContacts } from 'redux/selector';\n\nexport const List = () => {\n  const dispatch = useDispatch();\n\n  const vizibleContacts = useSelector(selectVizibleContacts);\n  return (\n    <ListEl>\n      {vizibleContacts.map((contact, id) => (\n        <ListItem key={id}>\n          {contact.name}: {contact.number}\n          {/* {contact.name}: {contact.phone} */}\n          <ListButton\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            Delete\n          </ListButton>\n        </ListItem>\n      ))}\n    </ListEl>\n  );\n};\n\nList.propTypes = {\n  contacts: PropTypes.array,\n  deleteContact: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-transform: uppercase;\n  width: 210px;\n`;\n\nexport const FilterInput = styled.input`\n  margin-top: 10px;\n  width: 100%;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { setFilter } from 'redux/filterSlice';\n\nimport { FilterLabel, FilterInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const value = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const onChange = event => {\n    const { value } = event.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput value={value} onChange={onChange}></FilterInput>\n    </FilterLabel>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { Form } from 'components/Form/Form';\nimport { Section } from 'components/Section/Section';\nimport { PhonebookWrap } from 'components/Section/Section.styled';\nimport { List } from 'components/List/List';\nimport { Filter } from 'components/Filter/Filter';\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport { selectContacts, selectIsLoading, selectError } from 'redux/selector';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <PhonebookWrap>\n        <Section title=\"Phonebook\">\n          <Form></Form>\n        </Section>\n        {isLoading && <p>Loading contacts...</p>}\n        {error && <p>{error}</p>}\n        {contacts.length > 0 && !isLoading && (\n          <Section title=\"Contacts\">\n            <Filter />\n            <List></List>\n          </Section>\n        )}\n      </PhonebookWrap>\n    </div>\n  );\n}\n"],"names":["FormEl","styled","FormLabel","InputEl","ButtonEl","Form","useState","name","setName","number","setNumber","contacts","useSelector","state","dispatch","useDispatch","NameId","nanoid","NumberId","handleChange","e","currentTarget","value","contactIsNotInList","some","alert","reset","onSubmit","preventDefault","action","addContact","id","addContactToList","htmlFor","type","onChange","pattern","title","required","PhonebookWrap","PhonebookSection","Title","Section","children","ListEl","ListItem","ListButton","selectContacts","selectIsLoading","isLoading","selectError","error","selectVizibleContacts","createSelector","filter","toLowerCase","includes","List","vizibleContacts","map","contact","onClick","deleteContact","FilterLabel","FilterInput","Filter","event","target","setFilter","Contacts","useEffect","fetchContacts","length"],"sourceRoot":""}